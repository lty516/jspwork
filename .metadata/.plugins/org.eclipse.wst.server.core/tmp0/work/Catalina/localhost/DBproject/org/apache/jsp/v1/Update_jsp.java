/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.37
 * Generated at: 2020-08-19 03:04:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.v1;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class Update_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head> <title>JSPBoard</title>\r\n");
      out.write("<link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<script>\r\n");
      out.write("   function check() {\r\n");
      out.write("      if (document.form.b_pass.value == \"\") {\r\n");
      out.write("       alert(\"수정을 위해 패스워드를 입력하세요.\");\r\n");
      out.write("        form.b_pass.focus();\r\n");
      out.write("       return false;\r\n");
      out.write("       }\r\n");
      out.write("      document.form.submit();\r\n");
      out.write("   }\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<center>\r\n");
      out.write("<br><br>\r\n");
      out.write("<table width=460 cellspacing=0 cellpadding=3>\r\n");
      out.write("  <tr>\r\n");
      out.write("   <td bgcolor=#FF9018  height=21 align=center class=m>수정하기</td>\r\n");
      out.write("  </tr>\r\n");
      out.write("</table>\r\n");

   String b_num = request.getParameter("b_num");

   Connection con = null;
   Statement stmt = null;
   ResultSet rs = null;
   
   String content = "", name="",email="", subject="";

   try {
      Class.forName("com.mysql.jdbc.Driver");
      String url = "jdbc:mysql://localhost:3306/jspdb";
      con = DriverManager.getConnection(url, "root", "1111");
      
      String sql = "select * from tblboard where b_num=" + b_num;
      stmt = con.createStatement();
      rs = stmt.executeQuery(sql);
      
      if (rs.next()) {
         name = rs.getString("b_name");
         email = rs.getString("b_email");
         subject = rs.getString("b_subject");
         content = rs.getString("b_content");

      }
      
   }
   catch (Exception err) { err.printStackTrace(); }
   finally {
      if(con != null) { con.close(); }
      if(stmt != null) { stmt.close(); }
      if(rs != null) { rs.close(); }
   }


      out.write("\r\n");
      out.write("<form name=form method=post action=\"UpdateProc.jsp\" >\r\n");
      out.write("<input type=\"hidden\" name=\"b_num\" value=\"");
      out.print(b_num );
      out.write("\" />\r\n");
      out.write("<table width=70% cellspacing=0 cellpadding=7>\r\n");
      out.write(" <tr>\r\n");
      out.write("  <td align=center>\r\n");
      out.write("   <table border=0>\r\n");
      out.write("    <tr>\r\n");
      out.write("     <td width=20%>성 명</td>\r\n");
      out.write("     <td width=80%>\r\n");
      out.write("     <input type=text name=b_name size=30 maxlength=20 value=\"");
      out.print(name);
      out.write("\">\r\n");
      out.write("    </td>\r\n");
      out.write("   </tr>\r\n");
      out.write("    <tr>\r\n");
      out.write("     <td width=20%>E-Mail</td>\r\n");
      out.write("     <td width=80%>\r\n");
      out.write("     <input type=text name=b_email size=30 maxlength=30 value=\"");
      out.print(email);
      out.write("\">\r\n");
      out.write("    </td>\r\n");
      out.write("    </tr>\r\n");
      out.write("   <tr>\r\n");
      out.write("     <td width=20%>제 목</td>\r\n");
      out.write("     <td width=80%>\r\n");
      out.write("     <input type=text name=b_subject size=50 maxlength=50 value=\"");
      out.print(subject);
      out.write("\">\r\n");
      out.write("    </td>\r\n");
      out.write("    <tr>\r\n");
      out.write("     <td width=20%>내 용</td>\r\n");
      out.write("     <td width=80%>\r\n");
      out.write("     <textarea name=b_content rows=10 cols=50>");
      out.print(content);
      out.write("</textarea>\r\n");
      out.write("    </td>\r\n");
      out.write("    </tr>\r\n");
      out.write("   <tr>\r\n");
      out.write("     <td width=20%>비밀 번호</td> \r\n");
      out.write("     <td width=80%><input type=password name=b_pass size=15 maxlength=15>\r\n");
      out.write("      수정시에는 비밀번호가 필요합니다.</td>\r\n");
      out.write("    </tr>\r\n");
      out.write("   <tr>\r\n");
      out.write("     <td colspan=2 height=5><hr size=1></td>\r\n");
      out.write("    </tr>\r\n");
      out.write("   <tr>\r\n");
      out.write("     <td colspan=2>\r\n");
      out.write("     <input type=Button value=\"수정완료\" onClick=\"check()\">\r\n");
      out.write("      <input type=reset value=\"다시수정\"> \r\n");
      out.write("      <input type=button value=\"뒤로\" onClick=\"history.back()\">\r\n");
      out.write("    </td>\r\n");
      out.write("    </tr> \r\n");
      out.write("   </table>\r\n");
      out.write("  </td>\r\n");
      out.write(" </tr>\r\n");
      out.write("</table>\r\n");
      out.write("</form> \r\n");
      out.write("</center>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
