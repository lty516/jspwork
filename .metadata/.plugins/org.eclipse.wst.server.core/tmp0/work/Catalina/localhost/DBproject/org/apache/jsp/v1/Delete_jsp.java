/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.37
 * Generated at: 2020-08-19 03:18:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.v1;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class Delete_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head><title>JSPBoard</title>\r\n");
      out.write("<link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<script>\r\n");
      out.write("\tfunction check() {\r\n");
      out.write("\t\tif (document.form.b_pass.value == \"\") {\r\n");
      out.write("\t\talert(\"패스워드를 입력하세요.\");\r\n");
      out.write("\t\tform.pass.focus();\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tdocument.form.submit();\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

		String b_num = request.getParameter("b_num");
		String pass = request.getParameter("b_pass");

		Connection con = null;
		PreparedStatement stmt = null;
		ResultSet rs = null;
		   
		String sql = null, db_pass = null;
		try {
		   Class.forName("com.mysql.jdbc.Driver");
		   String url = "jdbc:mysql://localhost:3306/jspdb";
		   con = DriverManager.getConnection(url, "root", "1111");
		   
		   sql = "select b_pass from tblboard where b_num=?";
		   stmt = con.prepareStatement(sql);
		   stmt.setString(1, b_num);
		   rs = stmt.executeQuery();
		   
		   if(rs.next()) {
		      db_pass = rs.getString("b_pass");
		   }
		   
		   if(pass.equals(db_pass)) {
		      sql = "delete from tblBoard where b_num=?";
		      
		      stmt = con.prepareStatement(sql);
		
		      stmt.setString(1, b_num);
		      
		      stmt.executeUpdate();
		      response.sendRedirect("List.jsp");
		   }
		   else {
		
      out.write("\r\n");
      out.write("\t\t      <script>\r\n");
      out.write("\t\t         alert(\"패스워드가 틀렸습니다.\");\r\n");
      out.write("\t\t         history.back();\r\n");
      out.write("\t\t      </script>\r\n");
      out.write("\t\t");

		   }
		}
		catch (Exception err) {
		   err.printStackTrace();
		}
		finally {
		   if(con != null) { con.close(); }
		   if(stmt != null) { stmt.close(); }
		   if(rs != null) { rs.close(); }
		}
		   

      out.write("\r\n");
      out.write("\r\n");
      out.write("<center>\r\n");
      out.write("<br><br>\r\n");
      out.write("<table width=50% cellspacing=0 cellpadding=3>\r\n");
      out.write(" <tr>\r\n");
      out.write("  <td bgcolor=#dddddd height=21 align=center>\r\n");
      out.write("      사용자의 비밀번호를 입력해 주세요.</td>\r\n");
      out.write(" </tr>\r\n");
      out.write("</table>\r\n");
      out.write("<table width=70% cellspacing=0 cellpadding=2>\r\n");
      out.write("<form name=form method=post action=\"Delete.jsp\" >\r\n");
      out.write("<input type=\"hidden\" name=\"b_num\" value =\"");
      out.print(b_num );
      out.write("\" />\r\n");
      out.write(" <tr>\r\n");
      out.write("  <td align=center>\r\n");
      out.write("   <table align=center border=0 width=91%>\r\n");
      out.write("    <tr> \r\n");
      out.write("     <td align=center>  \r\n");
      out.write("\t  <input type=password name=\"b_pass\" size=17 maxlength=15>\r\n");
      out.write("\t </td> \r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr>\r\n");
      out.write("     <td><hr size=1 color=#eeeeee></td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr>\r\n");
      out.write("     <td align=center>\r\n");
      out.write("\t  <input type=button value=\"삭제완료\" onClick=\"check()\"> \r\n");
      out.write("      <input type=reset value=\"다시쓰기\"> \r\n");
      out.write("      <input type=button value=\"뒤로\" onClick=\"history.back()\">\r\n");
      out.write("\t </td>\r\n");
      out.write("    </tr> \r\n");
      out.write("   </table>\r\n");
      out.write("  </td>\r\n");
      out.write(" </tr>\r\n");
      out.write("</form> \r\n");
      out.write("</table>\r\n");
      out.write("</center>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
